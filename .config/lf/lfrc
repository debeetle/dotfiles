# Basic vars
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
# set icons
set period 1
set cleaner '/home/trunk/.config/lf/cleaner'
set previewer '/home/trunk/.config/lf/scope'
set hidden true
set autoquit true

# cmds/functions
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
	#application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) localc $fx ;;
    text/*) nvim $fx;;
	#image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	# image/svg+xml) display -- $f ;;
    image/*) setsid feh $f >/dev/null 2>&1;;
    # image/*) $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|avif\|tif\|ico\)\(_large\)*$" |
    #     setsid -f feh -aio 2>/dev/null | while read -r file; do
    #         [ -z "$file" ] && continue
    #         # lf -remote "send select \"$file\""
    #         # lf -remote "send toggle"
    #     done &
    #     ;;
	audio/*) mpv --audio-display=no $f > /dev/null 2>&1;;
	video/*) -f mpv $f -quiet >/dev/null 2>&1;;
    application/pdf) setsid -f mupdf $fx >/dev/null 2>&1 ;;
    # application/vnd.djvu|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
	# application/pgp-encrypted) nvim $fx ;;
    # *) for f in $fx; do xdg-open -f $OPENER $f >/dev/null 2>&1; done;;
    *) for f in $fx; do $OPENER $f >/dev/null 2>&1 & done;;
    esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

#cmd moveto ${{
	#clear; tput cup $(($(tput lines)/3)); tput bold
	#set -f
	#clear; echo "Move to where?"
	#dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
	#for x in $fx; do
		#eval mv -iv \"$x\" \"$dest\"
	#done &&
	#notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
#}}

#cmd copyto ${{
	#clear; tput cup $(($(tput lines)/3)); tput bold
	#set -f
	#clear; echo "Copy to where?"
	#dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
	#for x in $fx; do
		#eval cp -ivr \"$x\" \"$dest\"
	#done &&
	#notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
#}}

cmd bulkrename $vidir

# Bindings
map <c-f> $lf -remote "send $id select \"$(fzf --preview 'clp {}')\""
map J $lf -remote "send $id cd $(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf)"
map gh
# map gg top
map D delete
map E extract
#map C copyto
#map M moveto
map <c-n> push :mkdir<space>
map <c-r> reload
map x $$f
map X !$f
map <enter> &mimeopen "$f"
map o $mimeopen --ask "$f"
# map q &lf -remote 'send quit'; killall lf

map A rename # at the very end
map c push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extension
map a push A<a-b> # after extension
map B bulkrename

# map <c-e> down
# map <c-y> up
map V push :!nvim<space>

map W $setsid -f $TERMINAL >/dev/null 2>&1

# map Y $printf "%s" "$fx" | xclip -selection clipboard

# Source Bookmarks
# source "~/.config/lf/bookmark"
